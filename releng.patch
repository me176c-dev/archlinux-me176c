diff --git a/airootfs/etc/systemd/system/pacman-init.service b/airootfs/etc/systemd/system/pacman-init.service
index 23b8144..5906cdf 100644
--- a/airootfs/etc/systemd/system/pacman-init.service
+++ b/airootfs/etc/systemd/system/pacman-init.service
@@ -9,7 +9,7 @@ After=etc-pacman.d-gnupg.mount
 Type=oneshot
 RemainAfterExit=yes
 ExecStart=/usr/bin/pacman-key --init
-ExecStart=/usr/bin/pacman-key --populate archlinux
+ExecStart=/usr/bin/pacman-key --populate archlinux me176c
 
 [Install]
 WantedBy=multi-user.target
diff --git a/airootfs/root/customize_airootfs.sh b/airootfs/root/customize_airootfs.sh
index bf5210c..ed751f5 100755
--- a/airootfs/root/customize_airootfs.sh
+++ b/airootfs/root/customize_airootfs.sh
@@ -21,3 +21,5 @@ sed -i 's/#\(HandleLidSwitch=\)suspend/\1ignore/' /etc/systemd/logind.conf
 
 systemctl enable pacman-init.service choose-mirror.service
 systemctl set-default multi-user.target
+systemctl enable bluetooth.service
+systemctl enable upi_ug31xx.service me176c-factory.service
diff --git a/build.sh b/build.sh
index 4b56542..e0ba20c 100755
--- a/build.sh
+++ b/build.sh
@@ -2,10 +2,10 @@
 
 set -e -u
 
-iso_name=archlinux
-iso_label="ARCH_$(date +%Y%m)"
-iso_publisher="Arch Linux <http://www.archlinux.org>"
-iso_application="Arch Linux Live/Rescue CD"
+iso_name=archlinux-me176c
+iso_label="ARCH_ME176C_$(date +%Y%m)"
+iso_publisher="me176c-dev <https://github.com/me176c-dev>"
+iso_application="Arch Linux Live/Rescue CD (ME176C)"
 iso_version=$(date +%Y.%m.%d)
 install_dir=arch
 work_dir=work
@@ -62,6 +62,7 @@ make_pacman_conf() {
 make_basefs() {
     mkarchiso ${verbose} -w "${work_dir}/x86_64" -C "${work_dir}/pacman.conf" -D "${install_dir}" init
     mkarchiso ${verbose} -w "${work_dir}/x86_64" -C "${work_dir}/pacman.conf" -D "${install_dir}" -p "haveged intel-ucode amd-ucode memtest86+ mkinitcpio-nfs-utils nbd zsh efitools" install
+    mkarchiso ${verbose} -w "${work_dir}/x86_64" -C "${work_dir}/pacman.conf" -D "${install_dir}" -p "me176c" install
 }
 
 # Additional packages (airootfs)
@@ -87,7 +88,7 @@ make_setup_mkinitcpio() {
       gpg --export ${gpg_key} >${work_dir}/gpgkey
       exec 17<>${work_dir}/gpgkey
     fi
-    ARCHISO_GNUPG_FD=${gpg_key:+17} mkarchiso ${verbose} -w "${work_dir}/x86_64" -C "${work_dir}/pacman.conf" -D "${install_dir}" -r 'mkinitcpio -c /etc/mkinitcpio-archiso.conf -k /boot/vmlinuz-linux -g /boot/archiso.img' run
+    ARCHISO_GNUPG_FD=${gpg_key:+17} mkarchiso ${verbose} -w "${work_dir}/x86_64" -C "${work_dir}/pacman.conf" -D "${install_dir}" -r 'mkinitcpio -c /etc/mkinitcpio-archiso.conf -k /boot/vmlinuz-linux-me176c -g /boot/archiso.img' run
     if [[ ${gpg_key} ]]; then
       exec 17<&-
     fi
@@ -101,6 +102,11 @@ make_customize_airootfs() {
 
     curl -o ${work_dir}/x86_64/airootfs/etc/pacman.d/mirrorlist 'https://www.archlinux.org/mirrorlist/?country=all&protocol=http&use_mirror_status=on'
 
+    # TODO: Consider providing a me176c-keyring package for this
+    local lambdadroid_key=2B1138A8BB59D786A3BF42AAD996DA70572407FB
+    pacman-key --export ${lambdadroid_key} > ${work_dir}/x86_64/airootfs/usr/share/pacman/keyrings/me176c.gpg
+    echo "${lambdadroid_key}:0:" > ${work_dir}/x86_64/airootfs/usr/share/pacman/keyrings/me176c-trusted
+
     lynx -dump -nolist 'https://wiki.archlinux.org/index.php/Installation_Guide?action=render' >> ${work_dir}/x86_64/airootfs/root/install.txt
 
     mkarchiso ${verbose} -w "${work_dir}/x86_64" -C "${work_dir}/pacman.conf" -D "${install_dir}" -r '/root/customize_airootfs.sh' run
@@ -111,7 +117,7 @@ make_customize_airootfs() {
 make_boot() {
     mkdir -p ${work_dir}/iso/${install_dir}/boot/x86_64
     cp ${work_dir}/x86_64/airootfs/boot/archiso.img ${work_dir}/iso/${install_dir}/boot/x86_64/archiso.img
-    cp ${work_dir}/x86_64/airootfs/boot/vmlinuz-linux ${work_dir}/iso/${install_dir}/boot/x86_64/vmlinuz
+    cp ${work_dir}/x86_64/airootfs/boot/vmlinuz-linux-me176c ${work_dir}/iso/${install_dir}/boot/x86_64/vmlinuz
 }
 
 # Add other aditional/extra files to ${install_dir}/boot/
@@ -122,11 +128,12 @@ make_boot_extra() {
     cp ${work_dir}/x86_64/airootfs/usr/share/licenses/intel-ucode/LICENSE ${work_dir}/iso/${install_dir}/boot/intel_ucode.LICENSE
     cp ${work_dir}/x86_64/airootfs/boot/amd-ucode.img ${work_dir}/iso/${install_dir}/boot/amd_ucode.img
     cp ${work_dir}/x86_64/airootfs/usr/share/licenses/amd-ucode/LICENSE ${work_dir}/iso/${install_dir}/boot/amd_ucode.LICENSE
+    cp ${work_dir}/x86_64/airootfs/boot/acpi-me176c.img ${work_dir}/iso/${install_dir}/boot/acpi-me176c.img
 }
 
 # Prepare /${install_dir}/boot/syslinux
 make_syslinux() {
-    _uname_r=$(file -b ${work_dir}/x86_64/airootfs/boot/vmlinuz-linux| awk 'f{print;f=0} /version/{f=1}' RS=' ')
+    _uname_r=$(file -b ${work_dir}/x86_64/airootfs/boot/vmlinuz-linux-me176c| awk 'f{print;f=0} /version/{f=1}' RS=' ')
     mkdir -p ${work_dir}/iso/${install_dir}/boot/syslinux
     for _cfg in ${script_path}/syslinux/*.cfg; do
         sed "s|%ARCHISO_LABEL%|${iso_label}|g;
@@ -156,7 +163,8 @@ make_efi() {
     cp ${work_dir}/x86_64/airootfs/usr/share/efitools/efi/PreLoader.efi ${work_dir}/iso/EFI/boot/bootx64.efi
     cp ${work_dir}/x86_64/airootfs/usr/share/efitools/efi/HashTool.efi ${work_dir}/iso/EFI/boot/
 
-    cp ${work_dir}/x86_64/airootfs/usr/lib/systemd/boot/efi/systemd-bootx64.efi ${work_dir}/iso/EFI/boot/loader.efi
+    curl -Lo ${work_dir}/iso/EFI/boot/loader.efi https://github.com/me176c-dev/me176c-boot/releases/download/0.3.0/me176c-bootstrap.efi
+    cp ${work_dir}/x86_64/airootfs/usr/lib/systemd/boot/efi/systemd-bootx64.efi ${work_dir}/iso/systemd-bootx64.efi
 
     mkdir -p ${work_dir}/iso/loader/entries
     cp ${script_path}/efiboot/loader/loader.conf ${work_dir}/iso/loader/
@@ -188,12 +196,14 @@ make_efiboot() {
 
     cp ${work_dir}/iso/${install_dir}/boot/intel_ucode.img ${work_dir}/efiboot/EFI/archiso/intel_ucode.img
     cp ${work_dir}/iso/${install_dir}/boot/amd_ucode.img ${work_dir}/efiboot/EFI/archiso/amd_ucode.img
+    cp ${work_dir}/iso/${install_dir}/boot/acpi-me176c.img ${work_dir}/efiboot/EFI/archiso/acpi-me176c.img
 
     mkdir -p ${work_dir}/efiboot/EFI/boot
     cp ${work_dir}/x86_64/airootfs/usr/share/efitools/efi/PreLoader.efi ${work_dir}/efiboot/EFI/boot/bootx64.efi
     cp ${work_dir}/x86_64/airootfs/usr/share/efitools/efi/HashTool.efi ${work_dir}/efiboot/EFI/boot/
 
-    cp ${work_dir}/x86_64/airootfs/usr/lib/systemd/boot/efi/systemd-bootx64.efi ${work_dir}/efiboot/EFI/boot/loader.efi
+    cp ${work_dir}/iso/EFI/boot/loader.efi ${work_dir}/efiboot/EFI/boot/loader.efi
+    cp ${work_dir}/x86_64/airootfs/usr/lib/systemd/boot/efi/systemd-bootx64.efi ${work_dir}/efiboot/systemd-bootx64.efi
 
     mkdir -p ${work_dir}/efiboot/loader/entries
     cp ${script_path}/efiboot/loader/loader.conf ${work_dir}/efiboot/loader/
diff --git a/efiboot/loader/entries/archiso-x86_64-cd.conf b/efiboot/loader/entries/archiso-x86_64-cd.conf
index b77ed98..209765a 100644
--- a/efiboot/loader/entries/archiso-x86_64-cd.conf
+++ b/efiboot/loader/entries/archiso-x86_64-cd.conf
@@ -2,5 +2,6 @@ title   Arch Linux archiso x86_64 UEFI CD
 linux   /EFI/archiso/vmlinuz.efi
 initrd  /EFI/archiso/intel_ucode.img
 initrd  /EFI/archiso/amd_ucode.img
+initrd  /EFI/archiso/acpi-me176c.img
 initrd  /EFI/archiso/archiso.img
 options archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL%
diff --git a/efiboot/loader/entries/archiso-x86_64-usb.conf b/efiboot/loader/entries/archiso-x86_64-usb.conf
index 09adca4..c0016a5 100644
--- a/efiboot/loader/entries/archiso-x86_64-usb.conf
+++ b/efiboot/loader/entries/archiso-x86_64-usb.conf
@@ -2,5 +2,6 @@ title   Arch Linux archiso x86_64 UEFI USB
 linux   /%INSTALL_DIR%/boot/x86_64/vmlinuz
 initrd  /%INSTALL_DIR%/boot/intel_ucode.img
 initrd  /%INSTALL_DIR%/boot/amd_ucode.img
+initrd  /%INSTALL_DIR%/boot/acpi-me176c.img
 initrd  /%INSTALL_DIR%/boot/x86_64/archiso.img
 options archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL%
diff --git a/mkinitcpio.conf b/mkinitcpio.conf
index c04f1dc..49749ca 100644
--- a/mkinitcpio.conf
+++ b/mkinitcpio.conf
@@ -1,2 +1,3 @@
-HOOKS=(base udev memdisk archiso_shutdown archiso archiso_loop_mnt archiso_pxe_common archiso_pxe_nbd archiso_pxe_http archiso_pxe_nfs archiso_kms block filesystems keyboard)
+MODULES=(i915)
+HOOKS=(base udev archiso_shutdown archiso archiso_loop_mnt archiso_pxe_common archiso_pxe_nbd archiso_pxe_http archiso_pxe_nfs block filesystems keyboard)
 COMPRESSION="xz"
diff --git a/packages.x86_64 b/packages.x86_64
index 45798cc..c315778 100644
--- a/packages.x86_64
+++ b/packages.x86_64
@@ -1,6 +1,7 @@
 arch-install-scripts
 b43-fwcutter
-broadcom-wl
+bluez
+bluez-utils
 btrfs-progs
 clonezilla
 crda
diff --git a/pacman.conf b/pacman.conf
index c678d01..7ba4b29 100644
--- a/pacman.conf
+++ b/pacman.conf
@@ -23,7 +23,7 @@ HoldPkg     = pacman glibc
 Architecture = auto
 
 # Pacman won't upgrade packages listed in IgnorePkg and members of IgnoreGroup
-#IgnorePkg   =
+IgnorePkg    = linux
 #IgnoreGroup =
 
 #NoUpgrade   =
@@ -94,6 +94,10 @@ Include = /etc/pacman.d/mirrorlist
 #[multilib]
 #Include = /etc/pacman.d/mirrorlist
 
+[me176c]
+SigLevel = Required
+Server = https://me176c.uber.space/archlinux
+
 # An example of a custom package repository.  See the pacman manpage for
 # tips on creating your own repositories.
 #[custom]
