From 6be2626427e278678a2a8d8905417e2e12e3f2ce Mon Sep 17 00:00:00 2001
From: lambdadroid <lambdadroid@gmail.com>
Date: Thu, 7 Sep 2017 12:17:48 +0200
Subject: [PATCH 10/12] pinctrl: baytrail: Add option to disable warnings about
 broken config

These warnings are printed whenever the screen is suspended. Since
there is no way to fix the hardware config directly, add an option
to disable the warnings to make the kernel log more readable.
---
 drivers/pinctrl/intel/Kconfig            | 5 +++++
 drivers/pinctrl/intel/pinctrl-baytrail.c | 4 ++++
 2 files changed, 9 insertions(+)

diff --git a/drivers/pinctrl/intel/Kconfig b/drivers/pinctrl/intel/Kconfig
index f30720a752f3..76cad4ebf4c3 100644
--- a/drivers/pinctrl/intel/Kconfig
+++ b/drivers/pinctrl/intel/Kconfig
@@ -18,6 +18,11 @@ config PINCTRL_BAYTRAIL
 
 	  Requires ACPI device enumeration code to set up a platform device.
 
+if PINCTRL_BAYTRAIL
+config PINCTRL_BAYTRAIL_BROKEN_CONFIG
+	bool "Disable warnings about broken pad configs"
+endif # PINCTRL_BAYTRAIL
+
 config PINCTRL_CHERRYVIEW
 	tristate "Intel Cherryview/Braswell pinctrl and GPIO driver"
 	depends on ACPI
diff --git a/drivers/pinctrl/intel/pinctrl-baytrail.c b/drivers/pinctrl/intel/pinctrl-baytrail.c
index 0f3a02495aeb..15f780cf10e1 100644
--- a/drivers/pinctrl/intel/pinctrl-baytrail.c
+++ b/drivers/pinctrl/intel/pinctrl-baytrail.c
@@ -1024,6 +1024,7 @@ static int byt_gpio_set_direction(struct pinctrl_dev *pctl_dev,
 	value &= ~BYT_DIR_MASK;
 	if (input)
 		value |= BYT_OUTPUT_EN;
+#ifndef CONFIG_PINCTRL_BAYTRAIL_BROKEN_CONFIG
 	else
 		/*
 		 * Before making any direction modifications, do a check if gpio
@@ -1033,6 +1034,7 @@ static int byt_gpio_set_direction(struct pinctrl_dev *pctl_dev,
 		 */
 		WARN(readl(conf_reg) & BYT_DIRECT_IRQ_EN,
 		     "Potential Error: Setting GPIO with direct_irq_en to output");
+#endif
 	writel(value, val_reg);
 
 	raw_spin_unlock_irqrestore(&vg->lock, flags);
@@ -1571,8 +1573,10 @@ static int byt_irq_type(struct irq_data *d, unsigned int type)
 	raw_spin_lock_irqsave(&vg->lock, flags);
 	value = readl(reg);
 
+#ifndef CONFIG_PINCTRL_BAYTRAIL_BROKEN_CONFIG
 	WARN(value & BYT_DIRECT_IRQ_EN,
 	     "Bad pad config for io mode, force direct_irq_en bit clearing");
+#endif
 
 	/* For level trigges the BYT_TRIG_POS and BYT_TRIG_NEG bits
 	 * are used to indicate high and low level triggering
-- 
2.15.1

