# $Id$
# Maintainer: lambdadroid <lambdadroid@gmail.com>

#pkgbase=linux               # Build stock -ARCH kernel
pkgbase=linux-me176c         # Build kernel with a different name
_srcname=linux-4.14
pkgver=4.14.34
pkgrel=1
arch=('x86_64')
url="https://github.com/me176c-dev/me176c-archlinux"
license=('GPL2')
makedepends=('xmlto' 'kmod' 'inetutils' 'bc' 'libelf' 'iasl')
options=('!strip')
source=(
  "https://www.kernel.org/pub/linux/kernel/v4.x/${_srcname}.tar.xz"
  "https://www.kernel.org/pub/linux/kernel/v4.x/${_srcname}.tar.sign"
  "https://www.kernel.org/pub/linux/kernel/v4.x/patch-${pkgver}.xz"
  "https://www.kernel.org/pub/linux/kernel/v4.x/patch-${pkgver}.sign"
  'config'         # the main kernel config file
  '60-linux.hook'  # pacman hook for depmod
  '90-linux.hook'  # pacman hook for initramfs regeneration
  'linux.preset'   # standard config files for mkinitcpio ramdisk
  'git+https://github.com/me176c-dev/me176c-acpi.git#commit=032c89d340794c2d8c7134675802ba9743613e9c'
  '0001-ME176C-Move-mfd-drivers-up-in-Makefile.patch'
  '0002-ME176C-ASoC-Intel-Atom-Force-use-of-BYT-CR-BIOS-reso.patch'
  '0003-ASoC-Intel-bytcr_rt5640-Add-quirks-for-ASUS-MeMO-Pad.patch'
  '0004-iio-accel-kxcjk-1013-Add-the-KXJ2109-ACPI-id.patch'
  '0005-iio-magnetometer-ak8975-Add-the-AKM9911-ACPI-id.patch'
  '0006-ME176C-x86-Add-support-to-optimize-kernel-for-Silver.patch'
  '0007-ME176C-input-misc-Add-ASUS-Lid-Cover-driver.patch'
  '0008-ME176C-ACPI-tables-Remap-GNVS-opregion-memory-offset.patch'
  '0009-ME176C-ASoC-Intel-bytcr_rt5640_jack-Headphone-detect.patch'
  '0010-ME176C-pinctrl-baytrail-Remove-warnings-caused-by-ha.patch'
  '0011-media-staging-atomisp-Avoid-using-trace_printk-by-de.patch'
  '0012-ME176C-platform-x86-Enable-INT0002-Virtual-GPIO-devi.patch'
  '0013-ME176C-Revert-pinctrl-baytrail-Do-not-add-all-GPIOs-.patch'
  '0014-ME176C-Revert-pinctrl-intel-set-default-handler-to-b.patch'
  '0015-ME176C-Revert-gpio-acpi-Override-GPIO-initialization.patch'
  '0016-ME176C-PM-Sleep-Add-wake-lock-api-wrapper-on-top-of-.patch'
  '0017-ME176C-intel-mid-Add-compatibility-layer-for-old-int.patch'
  '0018-ME176C-power-supply-Import-ASUS-MeMO-Pad-7-battery-c.patch'
  '0019-ME176C-power-supply-Fix-ASUS-MeMO-Pad-7-battery-char.patch'
  '0020-ME176C-pwm-crc-Turn-off-backlight-when-shutting-down.patch'
  '0021-drm-i915-Make-maximum-PWM-brightness-configurable.patch'
  '0022-ME176C-Revert-Input-goodix-poll-the-buffer-status-bi.patch'
)
validpgpkeys=(
  'ABAF11C65A2970B130ABE3C479BE3E4300411886'  # Linus Torvalds
  '647F28654894E3BD457199BE38DBBDC86092693E'  # Greg Kroah-Hartman
)
sha256sums=('f81d59477e90a130857ce18dc02f4fbe5725854911db1e7ba770c7cd350f96a7'
            'SKIP'
            'd5981abb1f9f73cc64843eefe1501166b6135ca41f73bb4c5dbe960f739edf6c'
            'SKIP'
            '889709f00e191d728efb80c73b30f597f33592b353c4072bad6ea3a309b28add'
            'ae2e95db94ef7176207c690224169594d49445e04249d2499e9d2fbc117a0b21'
            '75f99f5239e03238f88d1a834c50043ec32b1dc568f2cc291b07d04718483919'
            'ad6344badc91ad0630caacde83f7f9b97276f80d26a20619a87952be65492c65'
            'SKIP'
            'd5fbc22bbd8143f5f041d83639b867236dfaef8ef0843b22ea5cc7dd470af427'
            '7eb8825039bbf118a4f9e8ed2e4d2c43404555665df328b39510fae649023726'
            'ce6790de8f46a6f5aef6fb58f04b99bc4a89459170263b2f8b03f16de4dc862b'
            '19b59fe731c2efa0be118816e7c1f5a459c2af3f9335a89f87feb4d234ab5de1'
            '1e55dcb129565ef8f65616de724873f3bec55ffc85dbbf5fb6ef56fd36388788'
            '8c0daf726dbce307c29a4839c2f87a719e03879f715a125c9f571b9ca063af94'
            'd45367a6b4fb54bc1cf925c8d9e389c20b3e8ca550a1e2292e8f0270068788fd'
            'a1e1ee0628a7da2507b67f5f2b2e7319be452667f1a7e69d4f6e3b3b928f3675'
            '2d3622536cb1bc2b20f27363d809eac580046cd7f42f71e473efaaa468669bf6'
            'af3df09ee99447062b8ecea05ea5df29787055b14e0ab2361adda196e665a02c'
            'c2f2b4e48ea7a86dd6d5228ba3ef69d1067c2a7b5083f3b3fcf78e594210e6d4'
            '0771c8616118b24bed9fd151714e7046d3ff17dd098d24d8f0721be2be12fda2'
            '5cecbbc27f0484ca3e9b49a62bddfa9aebd8f17995273434701bf9386b680b9a'
            '9f7b9279a4e9d56fd5cff09c91e3135615499234f9230a756216d7b8c620fd52'
            'f03160e78c1532d18dd89b44a497ec1318f3dd6558f47013ed60dc26754b72c9'
            'f12da0c24c57997b7100a2cb24fcead43f82850756f5023a32ebc182a3ebe98f'
            '9c6dfb0bb3eebdbdf35abfdd39aa9c4d3da318deaea474c91a9093f0a20c2f81'
            '9bbd21c0bd43a9eec3070bb40761727d9cf692c83a8fee3af1cbaa6a2dee9645'
            '03d25d682dc7831b56712f67f76c19be548c3ba957291c524beed84024651ca6'
            '7438880d69305219e492539d07065a0f15608ec3a89a59c0cdbef5cc386ebbd0'
            '1f50cc1179199091a46c83c7db5ec3cdf401bfa878e6ad28dd9b61b9e2b4f981'
            'e4ace41bca26eff11c3df5b98011d19de1ea55324fcd06c8e2a335f3ff3390ac')

_kernelname=${pkgbase#linux}

prepare() {
  # Compile ACPI DSDT table
  iasl -tc me176c-acpi/dsdt.dsl

  cd ${_srcname}

  # add upstream patch
  patch -p1 -i ../patch-${pkgver}
  chmod +x tools/objtool/sync-check.sh  # GNU patch doesn't support git-style file mode

  # security patches

  # add latest fixes from stable queue, if needed
  # http://git.kernel.org/?p=linux/kernel/git/stable/stable-queue.git

  # ASUS MeMO Pad 7 (ME176C/CX) patches
  echo ../*.patch | xargs -n1 patch -p1 -i

  cp -Tf ../config .config

  # Append option for custom DSDT table
  echo "CONFIG_ACPI_CUSTOM_DSDT_FILE=\"`realpath ../me176c-acpi/dsdt.hex`\"" >> .config

  # set extraversion to pkgrel
  sed -ri "s|^(EXTRAVERSION =).*|\1 -${pkgrel}|" Makefile

  # don't run depmod on 'make install'. We'll do this ourselves in packaging
  sed -i '2iexit 0' scripts/depmod.sh

  # get kernel version
  make prepare

  # load configuration
  # Configure the kernel. Replace the line below with one of your choice.
  #make menuconfig # CLI menu for configuration
  #make nconfig # new CLI menu for configuration
  #make xconfig # X-based configuration
  #make oldconfig # using old config from previous kernel version
  # ... or manually edit .config

  # rewrite configuration
  yes "" | make config >/dev/null
}

build() {
  cd ${_srcname}

  make ${MAKEFLAGS} LOCALVERSION= bzImage modules
}

_package() {
  pkgdesc="The ${pkgbase/linux/Linux} kernel and modules"
  [ "${pkgbase}" = "linux" ] && groups=('base')
  depends=('coreutils' 'linux-firmware' 'kmod' 'mkinitcpio>=0.7')
  optdepends=('crda: to set the correct wireless channels of your country')
  backup=("etc/mkinitcpio.d/${pkgbase}.preset")
  install=linux.install

  cd ${_srcname}

  # get kernel version
  _kernver="$(make LOCALVERSION= kernelrelease)"
  _basekernel=${_kernver%%-*}
  _basekernel=${_basekernel%.*}

  mkdir -p "${pkgdir}"/{boot,usr/lib/modules}
  make LOCALVERSION= INSTALL_MOD_PATH="${pkgdir}/usr" modules_install
  cp arch/x86/boot/bzImage "${pkgdir}/boot/vmlinuz-${pkgbase}"

  # make room for external modules
  local _extramodules="extramodules-${_basekernel}${_kernelname:--ARCH}"
  ln -s "../${_extramodules}" "${pkgdir}/usr/lib/modules/${_kernver}/extramodules"

  # add real version for building modules and running depmod from hook
  echo "${_kernver}" |
    install -Dm644 /dev/stdin "${pkgdir}/usr/lib/modules/${_extramodules}/version"

  # remove build and source links
  rm "${pkgdir}"/usr/lib/modules/${_kernver}/{source,build}

  # now we call depmod...
  depmod -b "${pkgdir}/usr" -F System.map "${_kernver}"

  # add vmlinux
  install -Dt "${pkgdir}/usr/lib/modules/${_kernver}/build" -m644 vmlinux

  # sed expression for following substitutions
  local _subst="
    s|%PKGBASE%|${pkgbase}|g
    s|%KERNVER%|${_kernver}|g
    s|%EXTRAMODULES%|${_extramodules}|g
  "

  # hack to allow specifying an initially nonexisting install file
  sed "${_subst}" "${startdir}/${install}" > "${startdir}/${install}.pkg"
  true && install=${install}.pkg

  # install mkinitcpio preset file
  sed "${_subst}" ../linux.preset |
    install -Dm644 /dev/stdin "${pkgdir}/etc/mkinitcpio.d/${pkgbase}.preset"

  # install pacman hooks
  sed "${_subst}" ../60-linux.hook |
    install -Dm644 /dev/stdin "${pkgdir}/usr/share/libalpm/hooks/60-${pkgbase}.hook"
  sed "${_subst}" ../90-linux.hook |
    install -Dm644 /dev/stdin "${pkgdir}/usr/share/libalpm/hooks/90-${pkgbase}.hook"
}

_package-headers() {
  pkgdesc="Header files and scripts for building modules for ${pkgbase/linux/Linux} kernel"

  cd ${_srcname}
  local _builddir="${pkgdir}/usr/lib/modules/${_kernver}/build"

  install -Dt "${_builddir}" -m644 Makefile .config Module.symvers
  install -Dt "${_builddir}/kernel" -m644 kernel/Makefile

  mkdir "${_builddir}/.tmp_versions"

  cp -t "${_builddir}" -a include scripts

  install -Dt "${_builddir}/arch/x86" -m644 arch/x86/Makefile
  install -Dt "${_builddir}/arch/x86/kernel" -m644 arch/x86/kernel/asm-offsets.s

  cp -t "${_builddir}/arch/x86" -a arch/x86/include

  install -Dt "${_builddir}/drivers/md" -m644 drivers/md/*.h
  install -Dt "${_builddir}/net/mac80211" -m644 net/mac80211/*.h

  # http://bugs.archlinux.org/task/9912
  install -Dt "${_builddir}/drivers/media/dvb-core" -m644 drivers/media/dvb-core/*.h

  # http://bugs.archlinux.org/task/13146
  install -Dt "${_builddir}/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h

  # http://bugs.archlinux.org/task/20402
  install -Dt "${_builddir}/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
  install -Dt "${_builddir}/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
  install -Dt "${_builddir}/drivers/media/tuners" -m644 drivers/media/tuners/*.h

  # add xfs and shmem for aufs building
  mkdir -p "${_builddir}"/{fs/xfs,mm}

  # copy in Kconfig files
  find . -name Kconfig\* -exec install -Dm644 {} "${_builddir}/{}" \;

  # add objtool for external module building and enabled VALIDATION_STACK option
  install -Dt "${_builddir}/tools/objtool" tools/objtool/objtool

  # remove unneeded architectures
  local _arch
  for _arch in "${_builddir}"/arch/*/; do
    [[ ${_arch} == */x86/ ]] && continue
    rm -r "${_arch}"
  done

  # remove files already in linux-docs package
  rm -r "${_builddir}/Documentation"

  # remove now broken symlinks
  find -L "${_builddir}" -type l -printf 'Removing %P\n' -delete

  # Fix permissions
  chmod -R u=rwX,go=rX "${_builddir}"

  # strip scripts directory
  local _binary _strip
  while read -rd '' _binary; do
    case "$(file -bi "${_binary}")" in
      *application/x-sharedlib*)  _strip="${STRIP_SHARED}"   ;; # Libraries (.so)
      *application/x-archive*)    _strip="${STRIP_STATIC}"   ;; # Libraries (.a)
      *application/x-executable*) _strip="${STRIP_BINARIES}" ;; # Binaries
      *) continue ;;
    esac
    /usr/bin/strip ${_strip} "${_binary}"
  done < <(find "${_builddir}/scripts" -type f -perm -u+w -print0 2>/dev/null)
}

_package-docs() {
  pkgdesc="Kernel hackers manual - HTML documentation that comes with the ${pkgbase/linux/Linux} kernel"

  cd ${_srcname}
  local _builddir="${pkgdir}/usr/lib/modules/${_kernver}/build"

  mkdir -p "${_builddir}"
  cp -t "${_builddir}" -a Documentation

  # Fix permissions
  chmod -R u=rwX,go=rX "${_builddir}"
}

pkgname=("${pkgbase}" "${pkgbase}-headers" "${pkgbase}-docs")
for _p in ${pkgname[@]}; do
  eval "package_${_p}() {
    $(declare -f "_package${_p#${pkgbase}}")
    _package${_p#${pkgbase}}
  }"
done

# vim:set ts=8 sts=2 sw=2 et:
